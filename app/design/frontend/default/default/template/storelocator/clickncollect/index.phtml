
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script src="/js/storelocator/jquery.bpopup.min.js"></script>
<style>
    #element_to_pop_up {
        background-color:#fff;
        border-radius:15px;
        color:#000;
        display:none;
        padding:20px;
        min-width:960px;
        min-height: 500px;
    }
    .b-close{
        cursor:pointer;
        position:absolute;
        right:10px;
        top:5px;
    }
    #map-content{
        width: 680px;
        height: 500px;
        float: left;
    }
    .CollectFromHere{
        background: #0dffe6;
    }
    #storeList{
        width: 260px;
        background: #9de7ff;
        color: #000;
        float: right;
        display: none;
        text-align: left;
    }
    #mapLoad{
        width: 960px;
    }

</style>


<!-- Button that triggers the popup -->
<button id="my-button">POP IT UP</button>
<div id="content">  Address to show here </div>
<!-- Element to pop up -->
<div id="element_to_pop_up">
    <a class="b-close">close<a/>
        <div id="searchInput">
            <input type="text" name="address"  id="centerInput"  placeholder="Enter Town Or Postcode">
            <select name="options" id="radiusInput" >
                <option value="10">10mi</option>
                <option value="20">20mi</option>
                <option value="30">30mi</option>
                <option value="50">50mi</option>
                <option value="100">100mi</option>
                <option value="200">200mi</option>
                <option value="400">400mi</option>
            </select>
            <input type="submit" class="searchButton" value="SEARCH" onclick="fetchPlaces();">
            <button id="my-button">Reset</button>
        </div>
        <div id="mapLoad">
            <img src="https://www.ryman.co.uk/media/wysiwyg/ryman/misc/ryman_store_photo.jpg" width="960px" id="defaultImg"/>
            <div id="map-content"> </div>
            <div id="storeList"> Store List is here  </div>
        </div>
</div>
<img src="https://www.ryman.co.uk/media/wysiwyg/ryman/misc/ryman_store_photo.jpg" width="100%"/>

<script>
    var markers = [];
    var lat = '';
    var lng = '';
    var map;

    var infowindow =  new google.maps.InfoWindow({
        content: ''
    });

    function  fetchPlaces() {
        console.log("I am in fetchPlaces");
        jQuery("#defaultImg").hide();
        var centerInput =  jQuery("#centerInput").val();
        var radiusInput =  jQuery("#radiusInput").val();
        console.log("centerInput :: " + centerInput + " >> radiusInput :: " + radiusInput);
        jQuery.ajax({
            url : "http://maps.googleapis.com/maps/api/geocode/json?address=" + centerInput + "&sensor=false",
            dataType : 'json',
            success : function(response) {
                console.log("Success LatLng : " + response.status );
                if (response.status == 'OK') {
                    lat = response.results[0].geometry.viewport.northeast.lat;
                    lng = response.results[0].geometry.viewport.northeast.lng;
                    console.log("lat :: " + lat + " >> lng :: " + lng);
                    getMapMarkers(lat, lng, radiusInput );
                }
            }
        })
    };

    function setRadius(radiusInput){
        if (radiusInput == 10)  return 10;
        if (radiusInput == 20)  return 10;
        if (radiusInput == 30)  return 10;
        if (radiusInput == 50)  return 9;
        if (radiusInput == 100) return 9;
        return 6;
    }
    function getMapMarkers(lat, lng, radiusInput ) {
        console.log("lat :: " + lat + " >> lng :: " + lng);
        var mapOptions = {
            center: new google.maps.LatLng(lat, lng),
            zoom: setRadius(radiusInput),
            mapTypeId: 'roadmap'
        };
        console.log("MapOption init Succeeded");
        map = new google.maps.Map(document.getElementById("map-content"), mapOptions);
        console.log("map init Succeeded");

        var dataUrl = '/api/storelocatoreStores.php?s=2&w='+radiusInput+'&lat=' + lat +'&lng='+ lng + '&lb=0&le=5&m=true';
        console.log("dataUrl :: " + dataUrl );
        jQuery.ajax({
            url : dataUrl,
            dataType : 'json',
            success : function(response) {
                console.log("Success StoreData :: " + response.status );
                if (response.status == 'OK') {
                    var places = response.places;
                    console.log("Total records :: " + response.records);

                    var storeList='';
                    // loop through places and add markers
                    for (s in places) {
                        var p = places[s];
                        var geoName = p.unique_name;
                        //create gmap latlng obj
                        tmpLatLng = new google.maps.LatLng( p.lat, p.lng);
                        // make and place map maker.
                        eval( "var geoName = new google.maps.Marker({ map: map, position: tmpLatLng });" );
                        bindInfoWindow(geoName, map, infowindow, '<div   onclick="loadAddress( \'' + p.name  + '\');" class="CollectFromHere"> Collect From ' + p.name  + 'Mile </div>');

                        // Building storeList for side Panel
                        storeList += genStoreList(p);
                    }
                    $('#storeList').html( storeList) .show();
                }
            }
        })
    };

    function genStoreList(p){
        var distance = getDistanceFromLatLon(lat, lng, p.lat, p.lng);
        distance = distance.toFixed(2);
        var storeList='';
        if(distance != 'NaN' ){  // TODO :: This is not correct way to filter, need to find a better way to filter empty array
            var geoName = p.unique_name;
            storeList += '<b onclick="loadAddress( \'' + p.unique_name  + '\');" >' + p.name + '</b> (' + distance +  ' Mile) <br />';
            storeList += p.address1 + ' ' + p.city + ' ' + p.postcode + '<br />';
            storeList += 'Delivery In ' + p.delivery_note +  '<br />';
            storeList += '<div onclick="openInfoWindow( \'' + geoName  + '\');"> Show On Map </div>' + '<br />';
            storeList += '<hr>';
//            console.log("Address:: <b>" + storeList + '</b>');
        }
        return storeList;
    };

    // binds a map marker and infoWindow together on click
    var bindInfoWindow = function(marker, map, infowindow, html) {
        google.maps.event.addListener(marker, 'click', function() {
            infowindow.setContent(html);
            infowindow.open(map, marker);
        });
    };

    function loadAddress(name){
        console.log("popUpclosed; I'm in loadAddress");
        var dataUrl = '/api/storelocatoreStore.php?s='+name;
        jQuery.ajax({
            url : dataUrl,
            dataType : 'json',
            success : function(response) {
                console.log("Success StoreData :: " + response.status );
                if (response.status == 'OK') {
                    var store = response.store_details[0];
                    var address = 'Ryman ' + store.branch_name + '<br />' +
                        store.address1 + ','   + '<br />' +
                        store.city + '. ' + store.postcode + '<br />' +
                        'Tel : ' + store.telephone1 + '<br />' +
                        'Delivery time : ' + store.delivery_note ;
                        $('#content').html(address);
                }
            }
        })
        $( "#element_to_pop_up" ).bPopup().close();
    };

    function openInfoWindow(marker){
        var gMarker = marker;
        var center = marker;

        google.maps.event.trigger(gMarker, 'click', {
            latLng: center
        });
    };

    function getDistanceFromLatLon(lat1,lon1,lat2,lon2) {
        var R = 3959; // Radius of the earth in mile
        var dLat = deg2rad(lat2-lat1);  // deg2rad below
        var dLon = deg2rad(lon2-lon1);
        var a =
                Math.sin(dLat/2) * Math.sin(dLat/2) +
                    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
                        Math.sin(dLon/2) * Math.sin(dLon/2)
            ;
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        var d = R * c; // Distance in Mile
        console.log("From  " + lat1 + lon1 + ' To ' + lat2 + lon2 +  " Distance> " + d );
        return d;
    };

    function deg2rad(deg) {
        return deg * (Math.PI/180)
    };
</script>


<script>
    // Semicolon (;) to ensure closing of earlier scripting
    // Encapsulation
    // $ is assigned to jQuery ;
    ; (function($) {
        // DOM Ready
        $(function() {
            // Binding a click event
            // From jQuery v.1.7.0 use .on() instead of .bind()
            $('#my-button').bind('click', function(e) {
                // Prevents the default action to be triggered.
                e.preventDefault();
                // Triggering bPopup when click event is fired
                $('#element_to_pop_up').bPopup();
            });
        });
    })(jQuery);
</script>


